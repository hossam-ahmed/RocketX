/* ============= Transitions & Animations ============= */
@mixin mono-transition($prop, $dur, $easFunc, $del) {
    -moz-transition: $prop $dur $easFunc $del;
    -o-transition: $prop $dur $easFunc $del;
    -webkit-transition: $prop $dur $easFunc $del;
    transition: $prop $dur $easFunc $del;
    -moz-backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
}

@mixin di-transition($prop1, $dur1, $easFunc1, $del1, $prop2, $dur2, $easFunc2, $del2) {
    -moz-transition: $prop1 $dur1 $easFunc1 $del1, $prop2 $dur2 $easFunc2 $del2;
    -o-transition: $prop1 $dur1 $easFunc1 $del1, $prop2 $dur2 $easFunc2 $del2;
    -webkit-transition: $prop1 $dur1 $easFunc1 $del1, $prop2 $dur2 $easFunc2 $del2;
    transition: $prop1 $dur1 $easFunc1 $del1, $prop2 $dur2 $easFunc2 $del2;
    -moz-backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
}

@mixin tri-transition($prop1, $dur1, $easFunc1, $del1, $prop2, $dur2, $easFunc2, $del2, $prop3, $dur3, $easFunc3, $del3) {
    -moz-transition: $prop1 $dur1 $easFunc1 $del1, $prop2 $dur2 $easFunc2 $del2, $prop3 $dur3 $easFunc3 $del3;
    -o-transition: $prop1 $dur1 $easFunc1 $del1, $prop2 $dur2 $easFunc2 $del2, $prop3 $dur3 $easFunc3 $del3;
    -webkit-transition: $prop1 $dur1 $easFunc1 $del1, $prop2 $dur2 $easFunc2 $del2, $prop3 $dur3 $easFunc3 $del3;
    transition: $prop1 $dur1 $easFunc1 $del1, $prop2 $dur2 $easFunc2 $del2, $prop3 $dur3 $easFunc3 $del3;
    -moz-backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
}

/* ============= Layouts ============= */
@mixin light-bold($bold-color) {
    text-shadow: 0 0 0 $bold-color;
}

@mixin top-caret($caret-color, $dim, $is-pseudo: true) {
    @if($is-pseudo) {
        content: '';
    }

    width: 0;
    height: 0;
    border-top: 0;
    border-right: $dim solid transparent;
    border-bottom: $dim solid $caret-color;
    border-left: $dim solid transparent;
}

@mixin bottom-caret($caret-color, $dim, $is-pseudo: true) {
    @if($is-pseudo) {
        content: '';
    }

    width: 0;
    height: 0;
    border-top: $dim solid $caret-color;
    border-right: $dim solid transparent;
    border-bottom: 0;
    border-left: $dim solid transparent;
}

@mixin fit-all($pos: '') {
    @if($pos!='') {
        position: $pos;
    }

    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
}

@mixin flip-vert($extraTrans: '') {
    -moz-transform: $extraTrans rotate(90deg);
    -ms-transform: $extraTrans rotate(90deg);
    -o-transform: $extraTrans rotate(90deg);
    -webkit-transform: $extraTrans rotate(90deg);
    transform: $extraTrans rotate(90deg);
}

@mixin loader-1($loader-color-1, $loader-color-2, $loader-color-3, $loader-color-4, $loader-width) {
    .loader-anim {
        @extend .center-all;
    }

    .loader {
        margin: 0 auto;
        width: $loader-width;

        &:before {
            content: '';
            padding-top: 100%;
            @extend .block;
        }
    }

    .circular {
        @-moz-keyframes rotate {
            100% {
                -moz-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                -o-transform: rotate(360deg);
                -webkit-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }

        @-webkit-keyframes rotate {
            100% {
                -moz-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                -o-transform: rotate(360deg);
                -webkit-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }

        @keyframes rotate {
            100% {
                -moz-transform: rotate(360deg);
                -ms-transform: rotate(360deg);
                -o-transform: rotate(360deg);
                -webkit-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }

        @-webkit-keyframes dash {
            0% {
                stroke-dasharray: 1,200;
                stroke-dashoffset: 0;
            }

            50% {
                stroke-dasharray: 89,200;
                stroke-dashoffset: -35px;
            }

            100% {
                stroke-dasharray: 89,200;
                stroke-dashoffset: -124px;
            }
        }

        @-moz-keyframes dash {
            0% {
                stroke-dasharray: 1,200;
                stroke-dashoffset: 0;
            }

            50% {
                stroke-dasharray: 89,200;
                stroke-dashoffset: -35px;
            }

            100% {
                stroke-dasharray: 89,200;
                stroke-dashoffset: -124px;
            }
        }

        @keyframes dash {
            0% {
                stroke-dasharray: 1,200;
                stroke-dashoffset: 0;
            }

            50% {
                stroke-dasharray: 89,200;
                stroke-dashoffset: -35px;
            }

            100% {
                stroke-dasharray: 89,200;
                stroke-dashoffset: -124px;
            }
        }

        @-webkit-keyframes color {
            100%, 0% {
                stroke: $loader-color-1;
                /*red*/
            }

            40% {
                stroke: $loader-color-2;
                /*blue*/
            }

            66% {
                stroke: $loader-color-3;
                /*green*/
            }

            80%, 90% {
                stroke: $loader-color-4;
                /*yellow*/
            }
        }

        -moz-animation: rotate 2s linear infinite;
        -o-animation: rotate 2s linear infinite;
        -webkit-animation: rotate 2s linear infinite;
        animation: rotate 2s linear infinite;
        height: 100%;
        -moz-transform-origin: center center;
        -ms-transform-origin: center center;
        -o-transform-origin: center center;
        -webkit-transform-origin: center center;
        transform-origin: center center;
        @include fit-all(absolute);
        margin: auto;
    }

    .path {
        stroke-dasharray: 1,200;
        stroke-dashoffset: 0;
        stroke-linecap: round;
        -moz-animation: dash 1.5s ease-in-out infinite, color 6s ease-in-out infinite;
        -o-animation: dash 1.5s ease-in-out infinite, color 6s ease-in-out infinite;
        -webkit-animation: dash 1.5s ease-in-out infinite, color 6s ease-in-out infinite;
        animation: dash 1.5s ease-in-out infinite, color 6s ease-in-out infinite;
    }

    @-moz-keyframes color {
        100%, 0% {
            stroke: $loader-color-1;
            /*red*/
        }

        40% {
            stroke: $loader-color-2;
            /*blue*/
        }

        66% {
            stroke: $loader-color-3;
            /*green*/
        }

        80%, 90% {
            stroke: $loader-color-4;
            /*yellow*/
        }
    }

    @keyframes color {
        100%, 0% {
            stroke: $loader-color-1;
            /*red*/
        }

        40% {
            stroke: $loader-color-2;
            /*blue*/
        }

        66% {
            stroke: $loader-color-3;
            /*green*/
        }

        80%, 90% {
            stroke: $loader-color-4;
            /*yellow*/
        }
    }
}

@mixin loader-2($loader-color-1: map-get($theme-colors, default), $loader-color-2: map-get($theme-colors, primary), $loader-color-3: map-get($theme-colors, secondary)) {
    .spinner {
        /*width: 40px;*/
        @extend .txt-center;

        > div {
            width: 18px;
            height: 18px;
            /*background-color: #333;*/
            border-radius: 100%;
            -webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both /*, bc-color 6s ease-in-out infinite*/;
            -moz-animation: sk-bouncedelay 1.4s infinite ease-in-out both /*, bc-color 6s ease-in-out infinite*/;
            -o-animation: sk-bouncedelay 1.4s infinite ease-in-out both /*, bc-color 6s ease-in-out infinite*/;
            animation: sk-bouncedelay 1.4s infinite ease-in-out both /*, bc-color 6s ease-in-out infinite*/;
            @extend .in-block;
        }

        .bounce1 {
            /*-webkit-animation-delay: -0.32s;
            -moz-animation-delay: -0.32s;
            -o-animation-delay: -0.32s;
            animation-delay: -0.32s;*/
            -moz-animation: sk-bouncedelay 1.4s infinite ease-in-out both -.32s /*, bc-color 6s ease-in-out infinite -4s*/;
            -o-animation: sk-bouncedelay 1.4s infinite ease-in-out both -.32s /*, bc-color 6s ease-in-out infinite -4s*/;
            -webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both -.32s /*, bc-color 6s ease-in-out infinite -4s*/;
            animation: sk-bouncedelay 1.4s infinite ease-in-out both -.32s /*, bc-color 6s ease-in-out infinite -4s*/;
            background-color: $loader-color-1;
        }

        .bounce2 {
            /*-webkit-animation-delay: -0.16s;
            -moz-animation-delay: -0.16s;
            -o-animation-delay: -0.16s;
            animation-delay: -0.16s;*/
            -moz-animation: sk-bouncedelay 1.4s infinite ease-in-out both -.16s /*, bc-color 6s ease-in-out infinite -2s*/;
            -o-animation: sk-bouncedelay 1.4s infinite ease-in-out both -.16s /*, bc-color 6s ease-in-out infinite -2s*/;
            -webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both -.16s /*, bc-color 6s ease-in-out infinite -2s*/;
            animation: sk-bouncedelay 1.4s infinite ease-in-out both -.16s /*, bc-color 6s ease-in-out infinite -2s*/;
            background-color: $loader-color-2;
        }

        .bounce3 {
            background-color: $loader-color-3;
        }
    }

    @-webkit-keyframes sk-bouncedelay {
        0%, 80%, 100% {
            -webkit-transform: scale(0);
            -moz-transform: scale(0);
            -ms-transform: scale(0);
            -o-transform: scale(0);
            transform: scale(0);
        }

        40% {
            -webkit-transform: scale(1.0);
            -moz-transform: scale(1.0);
            -ms-transform: scale(1.0);
            -o-transform: scale(1.0);
            transform: scale(1.0);
        }
    }

    @-moz-keyframes sk-bouncedelay {
        0%, 80%, 100% {
            -webkit-transform: scale(0);
            -moz-transform: scale(0);
            -ms-transform: scale(0);
            -o-transform: scale(0);
            transform: scale(0);
        }

        40% {
            -webkit-transform: scale(1.0);
            -moz-transform: scale(1.0);
            -ms-transform: scale(1.0);
            -o-transform: scale(1.0);
            transform: scale(1.0);
        }
    }

    @keyframes sk-bouncedelay {
        0%, 80%, 100% {
            -webkit-transform: scale(0);
            -moz-transform: scale(0);
            -ms-transform: scale(0);
            -o-transform: scale(0);
            transform: scale(0);
        }

        40% {
            -webkit-transform: scale(1.0);
            -moz-transform: scale(1.0);
            -ms-transform: scale(1.0);
            -o-transform: scale(1.0);
            transform: scale(1.0);
        }
    }

    @-webkit-keyframes bc-color {
        100%, 0% {
            background-color: $loader-color-1;
            /*red*/
        }

        40% {
            background-color: $loader-color-2;
            /*blue*/
        }

        70% {
            background-color: $loader-color-3;
            /*green*/
        }
    }

    @-moz-keyframes bc-color {
        100%, 0% {
            background-color: $loader-color-1;
            /*red*/
        }

        40% {
            background-color: $loader-color-2;
            /*blue*/
        }

        70% {
            background-color: $loader-color-3;
            /*green*/
        }
    }

    @keyframes bc-color {
        100%, 0% {
            background-color: $loader-color-1;
            /*red*/
        }

        40% {
            background-color: $loader-color-2;
            /*blue*/
        }

        70% {
            background-color: $loader-color-3;
            /*green*/
        }
    }
}

/* ============= Components ============= */
@mixin generate-button($base-clr: map-get($theme-colors, default), $hov-txt_clr: map-get($theme-colors, default), $active-txt_clr: #fff, $def-bg_clr: #fff, $def-txt_clr: map-get($grey-shadows, 1), $hov-bg_clr: #fff, $is-transp: false, $type: default) {
    > .#{$prefix}-btn, %#{$prefix}-#{$type}-btn {
        background-color: $def-bg_clr;
        color: $def-txt_clr;
        border-color: $base-clr;

        @if($is-transp==true) {
            border: $border-width solid $border-color;
        }

        @if ($border-bottom-width!=$border-width) {
            border-bottom-width: $border-bottom-width;
        }

        &:hover, &.hovered {
            background-color: $hov-bg_clr;

            &, ~ .#{$prefix}-control-icon {
                color: $hov-txt_clr;
            }
        }

        &:active, &.active, %#{$prefix}-#{$type}-btn-active {
            background-color: darken($base-clr, 5%);
            box-shadow: inset 0 3px 3px -3px rgba(0,0,0,.4);

            &, ~ .#{$prefix}-control-icon {
                color: $active-txt_clr;
            }
        }

        @if ($is-transp==true) {
            &:active, &.active {
                background-color: darken($hov-bg_clr, 5%);
            }
        }

        &[disabled], &.disabled, %#{$prefix}-#{$type}-btn-disabled {
            &:hover {
                background-color: $def-bg_clr;

                &, ~ .#{$prefix}-control-icon {
                    color: $def-txt_clr;
                }
            }
        }
    }

    > .#{$prefix}-control-icon {
        color: $def-txt_clr;
    }
}

@mixin circular-button($radius) {
    width: $radius;
    height: $radius;

    > .#{$prefix}-input {
        width: $radius;
        height: $radius;
        line-height: $radius;
        min-width: 0;
        min-height: 0;
        padding: 0;
        border-radius: 50%;
    }
}

@mixin acc-structure($bg-clr: map-get($theme-colors, default), $outline-clr: map-get($theme-colors, primary), $acc-txt-clr: map-get($theme-colors, white), $anim-dur: .1s) {
    .panel {
        .panel-heading {
            background-color: $bg-clr;

            .panel-title {
                .accordion-toggle {
                    outline-color: $outline-clr;
                    color: $acc-txt-clr;
                }
            }
        }

        .panel-collapse {
            &.collapsing {
                -moz-transition-duration: $anim-dur;
                -o-transition-duration: $anim-dur;
                -webkit-transition-duration: $anim-dur;
                transition-duration: $anim-dur;
            }
        }

        &[is-disabled="true"] {
            .panel-heading {
                .panel-title {
                    .accordion-toggle {
                        .text-muted {
                            color: desaturate(lighten(map-get($theme-colors, body-bg), 30%),20%);
                        }
                    }
                }
            }
        }
    }
}

/* ============= Classes Generators ============= */
@mixin generate-txt-palette($theme-colors: $theme-colors, $grey-shadows: $grey-shadows, $media-query: '') {
    @each $key, $value in $theme-colors {
        @if($media-query=='') {
            .txt_#{$key}-clr {
                color: $value;
            }
        }
        @else {
            .txt_#{$key}-clr-#{$media-query} {
                color: $value;
            }
        }
    }

    @each $key, $value in $grey-shadows {
        @if($media-query=='') {
            .txt_grey_clr-#{$key} {
                color: $value;
            }
        }
        @else {
            .txt_grey_clr-#{$key}-#{$media-query} {
                color: $value;
            }
        }
    }
}

@mixin generate-background-palette($theme-colors: $theme-colors, $grey-shadows: $grey-shadows, $media-query: '') {
    @each $key, $value in $theme-colors {
        @if($media-query=='') {
            .bg_#{$key}-clr {
                background-color: $value;
            }
        }
        @else {
            .bg_#{$key}-clr-#{$media-query} {
                background-color: $value;
            }
        }
    }

    @each $key, $value in $grey-shadows {
        @if($media-query=='') {
            .bg_grey_clr-#{$key} {
                background-color: $value;
            }
        }
        @else {
            .bg_grey_clr-#{$key}-#{$media-query} {
                background-color: $value;
            }
        }
    }
}
